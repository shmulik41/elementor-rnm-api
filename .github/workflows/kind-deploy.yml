name: Deploy to KIND using Helm

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Create KIND cluster (name=kind)
        uses: helm/kind-action@v1.5.0
        with:
          cluster_name: kind

      - name: Build Docker image (local for KIND)
        run: |
          docker build -t elementor-rnm-api:latest .

      - name: Load image into KIND
        run: |
          kind load docker-image --name kind elementor-rnm-api:latest

      - name: Install Helm
        uses: azure/setup-helm@v3

      - name: Helm upgrade/install (use local image, avoid pulling)
        run: |
          helm upgrade --install elementor-rnm-api ./helm \
            --set image.repository=elementor-rnm-api \
            --set image.tag=latest \
            --set image.pullPolicy=Never \
            --set ingress.enabled=false

      - name: Wait for rollout
        run: |
          kubectl get pods -o wide
          kubectl rollout status deployment/elementor-rnm-api --timeout=180s

      - name: Smoke test (cluster-internal)
        run: |
          kubectl run curl --image=curlimages/curl:8.10.1 --restart=Never --rm -i -- \
            sh -c "curl -sf http://elementor-rnm-api/healthcheck || curl -sf http://elementor-rnm-api/"

      - name: Debug on failure (events, describe & logs)
        if: failure()
        run: |
          echo "==== Events (last) ===="; kubectl get events --sort-by=.lastTimestamp -A | tail -n 200 || true
          echo "==== Deploy describe ===="; kubectl describe deploy elementor-rnm-api || true
          echo "==== Pods ===="; kubectl get pods -o wide || true
          POD=$(kubectl get pod -l app=elementor-rnm-api -o jsonpath='{.items[0].metadata.name}' 2>/dev/null || echo "")
          if [ -n "$POD" ]; then
            echo "==== Pod describe ($POD) ===="; kubectl describe pod "$POD" || true
            echo "==== Pod image ===="; kubectl get pod "$POD" -o jsonpath='{.spec.containers[*].image}'; echo
            echo "==== Pod logs ($POD) ===="; kubectl logs "$POD" || true
          fi

